{
  "hash": "1c53ada714041f95fd9944a617032de9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"30 Day Chart Challenge - Part to Whole\"\nauthor: \"Seyram A. Butame\"\ndate: \"April 01, 2024\"\nformat:\n  html: \n   theme: cosmo\nhighlight: kate\neditor_options:\n  chunk_output_type: console\n---\n\n\n\nFor taday I want to keep it very simple. And since the themre is part of a whol, I am immediately thinking **Pie Chart**. But there are some fancier versions of pie charts called **Donut Charts** so I am creating the below. I got the data form [*Cedric Scherer*](https://www.cedricscherer.com/2024/04/01/contributions-30daychartchallenge-2024/). Their work is in datawrapper, while I am attempting to do it using `{ggplot2}` in R.\n\n<iframe title=\"Ah, geez!!!\" aria-label=\"Datawrapper visualization\" src=\"https://datawrapper.dwcdn.net/n0YjQ/\" scrolling=\"no\" frameborder=\"0\" height=\"454\" style=\"width: 0px; min-width: 75%; border: none; height: 455px;\"></iframe>\n\n\n\n## LIBRARY\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(skimr)\n```\n:::\n\n\n\n## DATA\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- read_csv(\"data/data.csv\") %>%\n  clean_names()\n```\n:::\n\n\n\n## EXAMINE DATA\n\nI need to use this `{skimr}` package more frequently. Its not really necessary with such a simple dataset here. However, the below is how you would implement the `skim()` function form the package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexamdt <- skim(df1)\n\nexamdt\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |df1  |\n|Number of rows           |2    |\n|Number of columns        |2    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|character                |1    |\n|numeric                  |1    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|role          |         0|             1|  16|  18|     0|        2|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|     sd| p0|    p25|   p50|    p75| p100|hist  |\n|:-------------|---------:|-------------:|-----:|------:|--:|------:|-----:|------:|----:|:-----|\n|n             |         0|             1| 195.5| 195.87| 57| 126.25| 195.5| 264.75|  334|▇▁▁▁▇ |\n\n\n:::\n:::\n\n\n\n## TEXT RESOLUTIN\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshowtext_auto()\n\nshowtext_opts(dpi = 320, regular.wt = 300, bold.wt = 800)\n```\n:::\n\n\n\n## FONTS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfont_add(\"fa6-brands\", \"Users/seyramb/Library/Fonts/Font Awesome 6 Brands-Regular-400.otf\") \nfont_add_google(\"Roboto Condensed\", \"title\")\nfont_add_google(\"Roboto Condensed\", \"subtitle\")\nfont_add_google(\"Roboto Condensed\", \"caption\")\nfont_add_google(\"Roboto Condensed\", \"text\")\n```\n:::\n\n\n\n\n## COLOR SCHEME\n\nI used a different color scheme for the donut chart. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Background Color\nbkgcol <- \"#F4E3D3FF\"\n\n# Text Color\n\nttlcol <- \"#000000\"\nsubcol <- \"#000000\"\ncapcol <- \"#000000\"\ntxtcol <- \"#000000\"\n\npalette <- c(\"#345C75FF\", \"#E48C2AFF\")\n```\n:::\n\n\n\n## TITLES AND CAPTIONS\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt <- str_glue(\"30 Day Chart Challenge: { 2024 } Day { 01 } &vert; Source: Wikipedia (List of The Simpsons guest stars) <br>\")\nX  <- str_glue(\"<span style='font-family:fa6-brands'>&#xe61b;</span>\")   \ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\n\nttltxt <- str_glue(\"Share of guest stars appearing as themselves on **The Simpsons**(season 1-30).\")\nsubtxt <- str_glue(\"Image is inspired by  Cédric Scherer <br> Data sourced from Data Wrapper.\")\ncaptxt <- str_glue(\"{tt} Visualization: {X} @butames &bull; {mn} @butames(mastodon.cloud) Code: {gh} butames &bull; Tools: #rstats #ggplot2\")\n```\n:::\n\n\n\n## THEME\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 12, base_family = \"text\"))\ntheme_update(\n  plot.title.position = \"plot\",\n  plot.caption.position = \"plot\",\n  axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0), size = rel(1), color = txtcol, family = \"text\", face = \"bold\"),\n  axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0), size = rel(1), color = txtcol, family = \"text\", face = \"bold\"),\n  axis.text = element_text(size = rel(1), color = txtcol, family = \"text\"),\n  axis.line.x = element_blank(),\n  panel.grid.minor.y = element_blank(),\n  panel.grid.major.y = element_blank(),\n  panel.grid.minor.x = element_blank(),\n  panel.grid.major.x = element_blank(),\n  plot.margin = margin(t = 10, r = 10, b = 10, l = 10),\n  plot.background = element_rect(fill = bkgcol, color = bkgcol),\n  panel.background = element_rect(fill = bkgcol, color = bkgcol)\n)\n```\n:::\n\n\n\n## DATA WRANGLE\n\nJust a little bit of data wrangling to turn the values into percent.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- df1 %>%\n  mutate(percent = n/sum(n))\n```\n:::\n\n\n\n\n## CREATE PLOT\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhsize <- 1.5\nplt1 <- df1 %>%\n  ggplot(aes(x = hsize, y = percent, fill = role)) +\n  geom_col() +\n  coord_polar(theta = \"y\") +\n  xlim(c(0.2, hsize + 0.5)) +\n  scale_fill_manual(values = palette) +\n  theme_minimal() +\n  labs(fill = \"Role\")\n\nplt1\n```\n\n::: {.cell-output-display}\n![](01parttowhole_files/figure-html/plot-1.png){width=672}\n:::\n:::\n\n\n\n## ADD LABELS\n\nCreating a donut chart applys the `coord_polar()` function. This changes the measurment of the polt making it difficult to annotate the figure. Typically with {ggplot2} annotation is straightofrard, because you can plot the location of the annotation using the `x` and the `y` coordinate system. But now you have introduced a *polar coordinate system.\n\nTo add annotations,you should overlay your plots and not use the layer facility, if you don't want to exactly calculate the distance in *radians* of each `x` for each `y`. You can achieve this using the `{cowplot}` package\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## REFERENCE\n\n1. Wickham H, RStudio. tidyverse: Easily Install and Load the “Tidyverse.” Published online February 22, 2023. Accessed February 2, 2024. https://cran.r-project.org/web/packages/tidyverse/index.html\n\n\n",
    "supporting": [
      "01parttowhole_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}